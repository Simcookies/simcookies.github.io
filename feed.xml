<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Simcookies</title>
    <description>All about Simcookies Project.</description>
    <link>http://simcookies.github.io/</link>
    <atom:link href="http://simcookies.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 06 Sep 2016 13:06:55 +0900</pubDate>
    <lastBuildDate>Tue, 06 Sep 2016 13:06:55 +0900</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>Begin with Rails</title>
        <description>&lt;p&gt;For a new developer of Rails, it may be a quite problem to distinguish the concepts of Ruby, Rails, rvm, gem, bundle and rake. So I want post this blog to summarize them, also summarize the steps to install Rails 4 on Linux Ubuntu 16.04.&lt;/p&gt;

&lt;h2&gt;Basic Concepts&lt;/h2&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ruby&lt;/td&gt;
&lt;td&gt;The name of programming language.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Rails&lt;/td&gt;
&lt;td&gt;The web develop framework mainly used ruby.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RVM&lt;/td&gt;
&lt;td&gt;RVM is a command-line tool which allows you to easily install, manage, and work with multiple ruby environments from interpreters to sets of gems.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RubyGems&lt;/td&gt;
&lt;td&gt;A package manager for the Ruby programming language that provides a standard format for distributing Ruby programs and libraries (in a self-contained format called a &amp;quot;gem&amp;quot;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gem&lt;/td&gt;
&lt;td&gt;A self-contained RubyGem format, you can use it directly as command-line.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bundle&lt;/td&gt;
&lt;td&gt;A kind of instance of gem, it provides a consistent environment for Ruby projects by tracking and installing the exact gems and versions that are needed. It always binded with file named &amp;quot;Gemfile&amp;quot;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Gemfile&lt;/td&gt;
&lt;td&gt;Binded with bundle like &lt;code&gt;bundle install&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Rake&lt;/td&gt;
&lt;td&gt;A simple ruby build program with capabilities similar to make.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Rakefile&lt;/td&gt;
&lt;td&gt;Rake&amp;#39;s version of Makefiles&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;hr&gt;

&lt;h2&gt;Install Rails 4&lt;/h2&gt;

&lt;h3&gt;Test OS&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Linux -- Ubuntu 16.04&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Install RVM&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;~ $ gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
~ $ \curl -sSL https://get.rvm.io | bash -s stable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After installing, you can use &lt;code&gt;rvm -v&lt;/code&gt; to check version of RVM you installed. Like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;~ $ rvm -v
rvm 1.27.0 (latest) by Wayne E. Seguin &amp;lt;wayneeseguin@gmail.com&amp;gt;, Michal Papis &amp;lt;mpapis@gmail.com&amp;gt; [https://rvm.io/]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Install Ruby with RVM&lt;/h3&gt;

&lt;p&gt;If you installed RVM successfully, you can use it to install RVM now. Firstly, you can use &lt;code&gt;rvm list known&lt;/code&gt; to list all versions you can install, and choose from them.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;~ $ rvm requirements # If without the step, it also included in next step.
~ $ rvm install 2.2.2 # Here you can decide which version by yourself.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here it may be take a bit long time because of downloading and complile. This installing also includes RubyGems. After it, you can use &lt;code&gt;rvm list&lt;/code&gt; to list all the versions you have installed. Like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;~ $ rvm list

rvm rubies

 * ruby-2.2.2 [ x86_64 ]

 # =&amp;gt; - current
 # =* - current &amp;amp;&amp;amp; default
 #  * - default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use &lt;code&gt;rvm use 2.2.2&lt;/code&gt; to set version of current ruby. And &lt;code&gt;rvm use 2.2.2 --default&lt;/code&gt; can set default version and you can use that version of ruby after openning console without setting version every time.&lt;/p&gt;

&lt;p&gt;However, when I installed rvm and use it firstly, it give me an error like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;~ $ rvm use 2.2.2 --default

RVM is not a function, selecting rubies with &amp;#39;rvm use ...&amp;#39; will not work.

You need to change your terminal emulator preferences to allow login shell.
Sometimes it is required to use `/bin/bash --login` as the command.
Please visit https://rvm.io/integration/gnome-terminal/ for an example.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Why showed this error? Because when we install rvm, it will add RVM path and RVM loading line to ~/.profile:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
[[ -s &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot; ]] &amp;amp;&amp;amp; source &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot; # Load RVM into a shell session *as a function* 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But we the console which we openned is always non-login bash, it will not load the .profile. Here I give my solution:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Move the loading line to .bashrc file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If we use non-login bash, it will load .bashrc, if we use login-bash, it will load .profile, and load .bashrc through:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# if running bash
if [ -n &amp;quot;$BASH_VERSION&amp;quot; ]; then
    # include .bashrc if it exists
    if [ -f &amp;quot;$HOME/.bashrc&amp;quot; ]; then
        . &amp;quot;$HOME/.bashrc&amp;quot;
    fi
fi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After this, I think it will be OK. Finally, use &lt;code&gt;gem -v&lt;/code&gt; to check version of Gemfile.&lt;/p&gt;

&lt;h3&gt;Install Bundler and Rails 4&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;gem install bundle&lt;/code&gt; to install bundler.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gem install rails --version=4.2.7.1&lt;/code&gt; Use &lt;code&gt;--version&lt;/code&gt; option to install specific rails.&lt;/p&gt;

&lt;h3&gt;Test Installing&lt;/h3&gt;

&lt;p&gt;According the offical documentation &lt;code&gt;rails new blog&lt;/code&gt; to make new rails project. But it will bundle install the lastest Rails and related gems automaticly, so we have to specify the version of rails which we want, like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;~ $ rails _4.2.7.1_ new blog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is quite important point, because the gems depend with each other. When I firstly rails new a project, I use &lt;code&gt;rails new blog&lt;/code&gt; directly, and just it generates a file named Gemfile, I just modify the version of rails in it:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Bundle edge Rails instead: gem &amp;#39;rails&amp;#39;, github: &amp;#39;rails/rails&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rails&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;4.2.7.1&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Errors will be showed when we start server. So itt&amp;#39;s better to spectify version.&lt;/p&gt;

&lt;p&gt;Finally, &lt;code&gt;rails server&lt;/code&gt; can start server at localhost:4000, you can input this address in browser and check the main page. Here we go with Rails 4!&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Surmmary&lt;/h2&gt;

&lt;p&gt;The versions of deferent parts and install order are very important, here I made a flow figure:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;install RVM --&amp;gt; use RVM install Ruby and gem --&amp;gt; use gem install bundle and Rails --&amp;gt; make project&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This post was writed to help new rails developer with deeper understanding about so many concepts. Also it helps me not to forget the install process. After them, enjoy developing in Rails!&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Offical RVM page: &lt;a href=&quot;https://rvm.io/&quot;&gt;https://rvm.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chinese install guide book: &lt;a href=&quot;https://ruby-china.org/wiki/rvm-guide&quot;&gt;https://ruby-china.org/wiki/rvm-guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Offical Rails guide book: &lt;a href=&quot;http://guides.rubyonrails.org/&quot;&gt;http://guides.rubyonrails.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;How to solve the problem with &amp;quot;RVM is not a function&amp;quot;: &lt;a href=&quot;http://stackoverflow.com/questions/9336596/rvm-installation-not-working-rvm-is-not-a-function&quot;&gt;http://stackoverflow.com/questions/9336596/rvm-installation-not-working-rvm-is-not-a-function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 04 Sep 2016 00:00:00 +0900</pubDate>
        <link>http://simcookies.github.io/2016/09/04/begin-wih-rails</link>
        <guid isPermaLink="true">http://simcookies.github.io/2016/09/04/begin-wih-rails</guid>
        
        <category>Rails</category>
        
        
        <category>Basics</category>
        
      </item>
    
      <item>
        <title>Post blogs with Jekyll</title>
        <description>&lt;p&gt;Jekyll is a tool can transform plain text into static websites and blog. It&amp;#39;s a open source project on &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Install jekyll&lt;/h2&gt;

&lt;p&gt;Jekyll writed by Ruby, they pack up it as a gem, so we can use RubyGems to install it.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;~ $ gem install jekyll
~ $ jekyll new your_site_dir
~ $ cd your_site_dir
~/your_site_dir $ jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then check the localhost at port 4000 as inputing localhost:4000 at address column of browser. We will see the standard blog pages. Here we use &lt;code&gt;jekyll serve&lt;/code&gt;, it will build the project and make a server at port 4000, we can also use &lt;code&gt;jekyll build --destrination &amp;lt;destrination&amp;gt;&lt;/code&gt; directly just for build. It&amp;#39;s enough for me.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Directory&lt;/h2&gt;

&lt;p&gt;Because the website is static, we can modify it by CSS/HTML and JavaScript. But we need to check the directory firstly:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;your_site_dir/
|-- README.md
|-- _config.yml
|-- _include/
|   |-- head.html
|   |-- header.html
|   |-- footer.html
|-- _layouts/
|   |-- default.html
|   |-- page.html
|   |-- post.html
|-- _plugins/
|-- _posts/
|-- _sass/
|   |-- _base.scss
|   |-- _layout.scss
|   |-- _syntax-highlighting.scss
|-- about.md
|-- css/
|   |-- main.scss
|-- feed.xml
|-- index.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We also use table to give detials about them:&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;File/Directory&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;_config.yml&lt;/td&gt;
&lt;td&gt;Stores configuration data. And it also can store global variables.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;_include&lt;/td&gt;
&lt;td&gt;These are the partials that can be mixed and matched by layouts and posts to facilitate reuse.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;_layouts&lt;/td&gt;
&lt;td&gt;These are the templates that wrap posts.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;_post&lt;/td&gt;
&lt;td&gt;Our post with markdown format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;_site&lt;/td&gt;
&lt;td&gt;The normal bulid directory, but I change it other place.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;index.html and other HTML, Markdown files&lt;/td&gt;
&lt;td&gt;These will be build directly to the build root directory.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;other file or floder&lt;/td&gt;
&lt;td&gt;These will also be build and included to root directory, such as css or script.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;hr&gt;

&lt;h2&gt;Configuration&lt;/h2&gt;

&lt;p&gt;Almost all of configurations and global variables are stored in _config.yml, however I just need a little of them. The format of configuration should be like &lt;code&gt;option: value&lt;/code&gt; or &lt;code&gt;variable: value&lt;/code&gt;. For example, normally , we need config the site info, just do like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Site settings&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blog&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descripe&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blog&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;here&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Social info if you want&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;twitter_username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;twitter&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;github_username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;github&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;facebook_username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facebook&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Markdown seetings&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;makrdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redcarpet&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;redcarpet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;something&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;here&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The point is, whenever you modify the _config.yml, server needs to be restarted again or _site needs to be rebuild.&lt;/p&gt;

&lt;hr&gt;

&lt;h1&gt;Use Markdown&lt;/h1&gt;

&lt;p&gt;Jekyll normally supports two markdown renderers: &lt;code&gt;Redcarpet&lt;/code&gt; and &lt;code&gt;Kramdown&lt;/code&gt;, we can also make our own markdown processors, but it&amp;#39;s not easy for me. In my blog project, I used &lt;code&gt;Redcarpet&lt;/code&gt;. So I make configuration like here:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;ss&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redcarpet&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;redcarpet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fenced_code_blocks&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no_intra_emphasis&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strikethrough&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autolink&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tables&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The extensions are used normally:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fenced_code_blocks&lt;/code&gt;: This will make it easy to write code.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;no_intra_emphasis&lt;/code&gt;: Do not parse emphasis inside of words. Strings such as &lt;code&gt;foo_bar_baz&lt;/code&gt; will not generate &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; tags.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;strikethrough&lt;/code&gt;: Parse strikethrough, PHP-Markdown style. Two &lt;code&gt;~&lt;/code&gt; characters mark the start of a strikethrough. Such as &lt;del&gt;Text&lt;/del&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;autolink&lt;/code&gt;: Parse links even when they are not enclosed in &amp;lt;&amp;gt; characters. Autolinks for the http, https and ftp protocols will be automatically detected.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tables&lt;/code&gt;: Parse tables.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;Use the jekyll to make own blog, and then we can focus on writting blogs. If we want to chage the theme of blog, we can also check &lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;here&lt;/a&gt;, fork their repository. Or we can make own themes, it&amp;#39;s a big challenge for skills of Front-End. OK, let&amp;#39;s enjoy blog now.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Jekyll offical docs site: &lt;a href=&quot;https://jekyllrb.com/docs/home/&quot;&gt;https://jekyllrb.com/docs/home/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jekyll GitHub repository souce code: &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;https://github.com/jekyll/jekyll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Markdown processer redcarpet: &lt;a href=&quot;https://github.com/vmg/redcarpet&quot;&gt;https://github.com/vmg/redcarpet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jekyll theme offical site: &lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;http://jekyllthemes.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 01 May 2016 00:00:00 +0900</pubDate>
        <link>http://simcookies.github.io/2016/05/01/deploy-first-blog-by-jekyll</link>
        <guid isPermaLink="true">http://simcookies.github.io/2016/05/01/deploy-first-blog-by-jekyll</guid>
        
        <category>jekyll</category>
        
        <category>markdown</category>
        
        
        <category>Blog Develop</category>
        
      </item>
    
      <item>
        <title>My first post</title>
        <description>&lt;p&gt;我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，&lt;strong&gt;Cmd Markdown&lt;/strong&gt; 是我们给出的答案我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;整理知识，学习笔记&lt;/li&gt;
&lt;li&gt;发布日记，杂文，所见所想&lt;/li&gt;
&lt;li&gt;撰写发布技术文稿（代码支持）&lt;/li&gt;
&lt;li&gt;撰写发布学术论文（LaTeX 公式支持）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://www.zybuluo.com/static/img/logo.png&quot; alt=&quot;cmd-markdown-logo&quot;&gt;&lt;/p&gt;

&lt;p&gt;除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.zybuluo.com/cmd/&quot;&gt;Windows/Mac/Linux 全平台客户端&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 &lt;i class=&quot;icon-file&quot;&gt;&lt;/i&gt; &lt;strong&gt;新文稿&lt;/strong&gt; 或者使用快捷键 &lt;code&gt;Ctrl+Alt+N&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2&gt;什么是 Markdown&lt;/h2&gt;

&lt;p&gt;Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，&lt;strong&gt;粗体&lt;/strong&gt; 或者 &lt;em&gt;斜体&lt;/em&gt; 某些文字，更棒的是，它还可以&lt;/p&gt;

&lt;h3&gt;2. 书写一个质能守恒公式&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://latex.codecogs.com/gif.latex?$$E=mc^2$$&quot; title=&quot;$$E=mc^2$$&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;3. 高亮一段代码&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SomeClass&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initinalize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;time&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@time&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;4. 绘制表格&lt;/h3&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th style=&quot;text-align: right&quot;&gt;价格&lt;/th&gt;
&lt;th style=&quot;text-align: center&quot;&gt;数量&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;计算机&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;$1600&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;手机&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;$12&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;管线&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;$1&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;234&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h3&gt;7. 更详细语法说明&lt;/h3&gt;

&lt;p&gt;想要查看更详细的语法说明，可以参考我们准备的 [Cmd Markdown 简明语法手册][1]，进阶用户可以参考 [Cmd Markdown 高阶语法手册][2] 了解更多高级功能。&lt;/p&gt;

&lt;p&gt;总而言之，不同于其它 &lt;em&gt;所见即所得&lt;/em&gt; 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。&lt;strong&gt;Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。&lt;/strong&gt; 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;什么是 Cmd Markdown&lt;/h2&gt;

&lt;p&gt;您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 &lt;strong&gt;编辑/发布/阅读&lt;/strong&gt; Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。&lt;/p&gt;

&lt;h3&gt;1. 实时同步预览&lt;/h3&gt;

&lt;p&gt;我们将 Cmd Markdown 的主界面一分为二，左边为&lt;strong&gt;编辑区&lt;/strong&gt;，右边为&lt;strong&gt;预览区&lt;/strong&gt;，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！&lt;/p&gt;

&lt;h3&gt;2. 编辑工具栏&lt;/h3&gt;

&lt;p&gt;也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 &lt;strong&gt;编辑区&lt;/strong&gt; 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.zybuluo.com/static/img/toolbar-editor.png&quot; alt=&quot;tool-editor&quot;&gt;&lt;/p&gt;

&lt;h3&gt;3. 编辑模式&lt;/h3&gt;

&lt;p&gt;完全心无旁骛的方式编辑文字：点击 &lt;strong&gt;编辑工具栏&lt;/strong&gt; 最右测的拉伸按钮或者按下 &lt;code&gt;Ctrl + M&lt;/code&gt;，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！&lt;/p&gt;

&lt;h3&gt;4. 实时的云端文稿&lt;/h3&gt;

&lt;p&gt;为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 &lt;strong&gt;编辑工具栏&lt;/strong&gt; 的最右侧提示 &lt;code&gt;已保存&lt;/code&gt; 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。&lt;/p&gt;

&lt;h3&gt;5. 离线模式&lt;/h3&gt;

&lt;p&gt;在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。&lt;/p&gt;

&lt;h3&gt;6. 管理工具栏&lt;/h3&gt;

&lt;p&gt;为了便于管理您的文稿，在 &lt;strong&gt;预览区&lt;/strong&gt; 的顶部放置了如下所示的 &lt;strong&gt;管理工具栏&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.zybuluo.com/static/img/toolbar-manager.jpg&quot; alt=&quot;tool-manager&quot;&gt;&lt;/p&gt;

&lt;p&gt;通过管理工具栏可以：&lt;/p&gt;

&lt;p&gt;&lt;i class=&quot;icon-share&quot;&gt;&lt;/i&gt; 发布：将当前的文稿生成固定链接，在网络上发布，分享
&lt;i class=&quot;icon-file&quot;&gt;&lt;/i&gt; 新建：开始撰写一篇新的文稿
&lt;i class=&quot;icon-trash&quot;&gt;&lt;/i&gt; 删除：删除当前的文稿
&lt;i class=&quot;icon-cloud&quot;&gt;&lt;/i&gt; 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地
&lt;i class=&quot;icon-reorder&quot;&gt;&lt;/i&gt; 列表：所有新增和过往的文稿都可以在这里查看、操作
&lt;i class=&quot;icon-pencil&quot;&gt;&lt;/i&gt; 模式：切换 普通/Vim/Emacs 编辑模式&lt;/p&gt;

&lt;h3&gt;7. 阅读工具栏&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://www.zybuluo.com/static/img/toolbar-reader.jpg&quot; alt=&quot;tool-manager&quot;&gt;&lt;/p&gt;

&lt;p&gt;通过 &lt;strong&gt;预览区&lt;/strong&gt; 右上角的 &lt;strong&gt;阅读工具栏&lt;/strong&gt;，可以查看当前文稿的目录并增强阅读体验。&lt;/p&gt;

&lt;p&gt;工具栏上的五个图标依次为：&lt;/p&gt;

&lt;p&gt;&lt;i class=&quot;icon-list&quot;&gt;&lt;/i&gt; 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落
&lt;i class=&quot;icon-chevron-sign-left&quot;&gt;&lt;/i&gt; 视图：互换左边编辑区和右边预览区的位置
&lt;i class=&quot;icon-adjust&quot;&gt;&lt;/i&gt; 主题：内置了黑白两种模式的主题，试试 &lt;strong&gt;黑色主题&lt;/strong&gt;，超炫！
&lt;i class=&quot;icon-desktop&quot;&gt;&lt;/i&gt; 阅读：心无旁骛的阅读模式提供超一流的阅读体验
&lt;i class=&quot;icon-fullscreen&quot;&gt;&lt;/i&gt; 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境&lt;/p&gt;

&lt;h3&gt;8. 阅读模式&lt;/h3&gt;

&lt;p&gt;在 &lt;strong&gt;阅读工具栏&lt;/strong&gt; 点击 &lt;i class=&quot;icon-desktop&quot;&gt;&lt;/i&gt; 或者按下 &lt;code&gt;Ctrl+Alt+M&lt;/code&gt; 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。&lt;/p&gt;
</description>
        <pubDate>Sat, 02 Apr 2016 19:35:16 +0900</pubDate>
        <link>http://simcookies.github.io/2016/04/02/my-first-jekyll</link>
        <guid isPermaLink="true">http://simcookies.github.io/2016/04/02/my-first-jekyll</guid>
        
        <category>test</category>
        
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Mar 2016 15:35:16 +0900</pubDate>
        <link>http://simcookies.github.io/2016/03/21/welcome-to-jekyll</link>
        <guid isPermaLink="true">http://simcookies.github.io/2016/03/21/welcome-to-jekyll</guid>
        
        <category>jekyll</category>
        
        
        <category>Blog Develop</category>
        
      </item>
    
  </channel>
</rss>
